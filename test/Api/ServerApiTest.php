<?php
/**
 * ServerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * VDSina public API
 *
 * The data format of the incoming request and the returned data: JSON. All dates and timestamps are returned in the Europe/Moscow zone (the time zone in which the API server is located). A permanent authorization token can be obtained in the personal account in viewing the user's account information. The token changes when the user's password is changed. The token will have the same access rights as the specified user on whose behalf the token request was made. If you need to restrict actions for API requests, you need to create a separate user in the account with the necessary set of rights and make requests with this user's token.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@vdsina.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ServerApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ServerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for serverGet
     *
     * Servers list.
     *
     */
    public function testServerGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIpLocalServerIDDelete
     *
     * Delete server local IP address.
     *
     */
    public function testServerIpLocalServerIDDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIpLocalServerIDGet
     *
     * View info about server local IP address.
     *
     */
    public function testServerIpLocalServerIDGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIpLocalServerIDPost
     *
     * Create server local IP address.
     *
     */
    public function testServerIpLocalServerIDPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIpServerIDGet
     *
     * Services list with additional IP addresses.
     *
     */
    public function testServerIpServerIDGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIpServerIDPost
     *
     * Order additional IP addresses for server.
     *
     */
    public function testServerIpServerIDPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIpServerIDPut
     *
     * Delete additional IP addresses for server.
     *
     */
    public function testServerIpServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIsoServerIDDelete
     *
     * Detach ISO from server.
     *
     */
    public function testServerIsoServerIDDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverIsoServerIDPut
     *
     * Attach ISO to server.
     *
     */
    public function testServerIsoServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverPasswordServerIDGet
     *
     * Get server password.
     *
     */
    public function testServerPasswordServerIDGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverPasswordServerIDPut
     *
     * Set server password.
     *
     */
    public function testServerPasswordServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverPlanServerIDPut
     *
     * Change server tariff plan.
     *
     */
    public function testServerPlanServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverPost
     *
     * Create new server.
     *
     */
    public function testServerPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverProlongServerIDPut
     *
     * Prolong and start server.
     *
     */
    public function testServerProlongServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverRebootServerIDPut
     *
     * Server reboot.
     *
     */
    public function testServerRebootServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverReinstallServerIDPut
     *
     * Reinstalling the server.
     *
     */
    public function testServerReinstallServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverServerIDDelete
     *
     * Delete server.
     *
     */
    public function testServerServerIDDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverServerIDGet
     *
     * View server info.
     *
     */
    public function testServerServerIDGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverServerIDPut
     *
     * Update server parameters.
     *
     */
    public function testServerServerIDPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for serverStatServerIDGet
     *
     * Server statistics.
     *
     */
    public function testServerStatServerIDGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
